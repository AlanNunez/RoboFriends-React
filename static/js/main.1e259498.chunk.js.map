{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sCAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA2BL,EAA3B,cACrB,gCACE,6BAAKC,IACL,4BAAIC,WCUGI,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CACEV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,cCIdS,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAHI,G,MANA,SAACC,GACZ,OAAQ,qBAAKC,MAAS,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAxE,SACDJ,EAAMK,aCoBFC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACtBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG7B,WACG,OAAIG,KAAKJ,MAAMC,SACJ,yCAEAG,KAAKX,MAAMK,a,GAjBDQ,aC8CbC,E,kDAvCb,aAAe,IAAD,8BACZ,gBAMFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAN1C,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,IAJH,E,sDAWd,WAAsB,IAAD,OACnBG,MAAM,8CACH5C,MAAK,SAAC6C,GAAD,OAAcA,EAASC,UAC5B9C,MAAK,SAAC+C,GAAD,OAAW,EAAKX,SAAS,CAAEtB,OAAQiC,S,oBAG7C,WACE,MAAgCZ,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVO,EAAelC,EAAOmC,QAAO,SAACC,GAClC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASX,EAAYU,kBAGvD,OAAQrC,EAAOuC,OAGb,sBAAK3C,UAAU,KAAf,UACE,8CACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQkC,WAPxB,6C,GAzBYX,aCDlBiB,IAASC,OACL,8BACE,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.1e259498.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className='bg-light-green dib br3 pa3 ma2 grow'>\n      <img alt='robots' src= {`https://robohash.org/${id}?200x200`} ></img>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","import Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          ></Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa2 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      ></input>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (<div style = {{ overflowY: 'scroll', border: '4px solid black', height: '500px' }}>\n          {props.children}\n    </div>)\n};\n\nexport default Scroll;","import { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n       this.setState({ hasError: true });\n    }\n\n    render() {\n       if (this.state.hasError) {\n           return <h1>OOOPSS!</h1>\n       } else {\n           return this.props.children;\n       }\n    }\n}\n\nexport default ErrorBoundary;","import React from \"react\";\nimport { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    };\n  }\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  componentWillMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filterRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1>RobotFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filterRobots}></CardList>\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\nimport App from \"./containers/App\"\n\nReactDOM.render(\n    <div>\n      <App/>\n    </div>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}